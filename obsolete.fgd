//====== Copyright ï¿½ 1996-2005, Valve Corporation, All rights reserved. =======
//
// Purpose: Half-Life 2 game definition file (.fgd)
//
// This is the Mapbase version of the PinSplash Obsolete FGD.
// Much of this content only works in Mapbase.
//
//=============================================================================

@include "base.fgd"

//-------------------------------------------------------------------------
//
// NPCs
//
//-------------------------------------------------------------------------

@PointClass base(Targetname) iconsprite("editor/ai_citizen_response_system") = ai_citizen_response_system :
	"OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "It manages some aspects of citizens responding to events. It was replaced by ai_npc_eventresponsesystem."
[
	// Inputs
	input ResponseVitalNPC(void) : "Fire the VitalNPC Died response."
]

@PointClass base(Targetname, EnableDisable) iconsprite("editor/ai_goal_operator") = ai_goal_operator :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "It's an entity similar to scripted_sequence but with less features." +
    "The entity is not present in HL2DM."
[
	actor(target_name_or_class) : "Actor to affect" : "" : "NPC that should perform this operation"

	target(target_destination) : "Position entity" : "" : "Name of the entity that the NPC should move to in order to perform the operation."

	contexttarget(target_destination) :"Context target" : "" : "(Optional) Name of an entity that the operator will use within context."

	state(choices) : "Initial State" : 0 =
	[
		0 : "Not ready (closed, locked, etc)"
		1 : "Ready (open and accessible)"
	]

	moveto(choices) : "How should NPC approach?" : 1 =
	[
		0 : "DO NOT USE THIS SETTING"
		1 : "Walk"
		2 : "Run"
	]

	input Activate( void ) : "Begin operating on the object"
//	input Deactivate( void ) : "Cease contesting position"
	input SetStateReady(void) : "Set the object's state to READY. Fire this input when the object has been unlocked/opened or otherwise made ready for interaction."
	input SetStateFinished(void) : "Fire this input when the NPC has completed the interaction with this object."

	output OnBeginApproach(void) : "Fired when the NPC begins to approach the position"
	output OnMakeReady(void) : "Make the item ready to operate"
	output OnBeginOperating(void) : "Fired when the NPC is ready to operate"
	output OnFinished(void) : "The item is done"
]

//-------------------------------------------------------------------------
//
// Cyclers
//
//-------------------------------------------------------------------------

@PointClass base(Targetname, Parentname, Angles, RenderFxChoices, RenderFields) studio() = cycler :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was used in Half-Life for models, so replace it with a prop_ entity."
[
	spawnflags(flags) =
	[
		1: "[1] Not Solid" : 0
	]
	model(studio) : "Model"
	skin(integer) : "Skin" : 0 : "Some models have multiple versions of their textures, called skins. Set this to a number other than 0 to use that skin instead of the default."

	sequence(integer) : "Sequence" : 0 : "Default animation sequence for the model to be playing after spawning."

	// Inputs
	input SetSequence(string) : "Sets the cycler's sequence."
]

@PointClass base(BaseNPC, RenderFields, Shadow) studio() = cycler_actor :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was used in Half-Life for models, so replace it with a prop_ entity."
[
	model(studio) : "Model"
	Sentence(string) : "Sentence Group" : ""

	input Alpha(integer) : "Set Alpha Value"
]

//-------------------------------------------------------------------------
//
// Brushes
//
//-------------------------------------------------------------------------

@SolidClass base(Targetname, Parentname, Origin, RenderFields, Shadow) color(255 0 255) = func_conveyor :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "It's a conveyor belt that may look convincing when given a scrolling texture." +
    "You should use a prop and a trigger_push instead. This entity is known to cause hitbox issues."
[
    _minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."

    disablereceiveshadows(choices) : "Disable Receiving Shadows" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	vrad_brush_cast_shadows(choices) : "Shadows" : 0 : "Set this if this brush casts lightmap shadows." =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(flags) =
	[
		1 : "No Push - Makes the conveyor not move things that touch it." : 0
		2 : "Not Solid - Make the conveyor untouchable, therefore preventing it from moving anything." : 0
	]
	movedir(angle) : "Move Direction (Pitch Yaw Roll)" : "0 0 0" : "Direction in which things move when on the conveyor. Changing this with AddOutput is possible but tricky because this keyvalue becomes a normalized vector after spawning."
	speed(float) : "Conveyor Speed" : 100 : "How fast to move things that are on the conveyor."
	input ToggleDirection(void) : "Changes the direction the conveyor pushes in by switching Conveyor Speed between negative and positive."
]

@SolidClass base(Targetname, Parentname, Origin, RenderFields, Shadow) = func_illusionary :
	"OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was used in Half-Life for non-solid brushes. Use func_brush instead."
[
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
]

@PointClass base(Targetname, Parentname, Angles) size( -16 -16 0, 16 16 72 ) color(127 127 127) = func_ladderendpoint :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "You should use func_useableladder instead."
[
	target(target_destination) : "Other" : : "A ladder goes between any two func_ladderendpoints pointing at each other."
	// TODO:  Allow individual ladder end points to be enabled, disabled
	// TODO:  Allow ladder to specify movement speed or a speed scale while on ladder
	// TODO:  Allow specifying radius within with you must be in order to +use to get on the ladder
]

@SolidClass base(Targetname, Parentname, RenderFields) sphere(DisappearDist) sphere(DisappearMaxDist) = func_lod :
	"OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity used to be needed as an optimization which would fade brushes away when not near them." +
    "This is no longer useful as checking the distance from camera to brush, and rendering the brush translucently, is slower than drawing the brush opaquely as world/detail."
[
	DisappearDist(integer)    : "Disappear Distance" : 2000 : "Distance at which these brushes should start to fade out."
	DisappearMaxDist(integer)    : "Maximum Disappear Distance" : 0 : "If specified, this would be distance at which these brushes should fade out completely. If 0, it will combine the regular disappear distance with the value stored in the 'lod_TransitionDist' convar, which is 800 by default."
	InvertAlpha(bool) : "Inverts the calculated visibility."
	Solid(choices) : "Solid" : 0 : "Set whether or not these brushes should collide with other entities." =
	[
		0: "Solid"
		1: "Nonsolid"
	]
]

@SolidClass base(Targetname, Parentname, Origin, Angles, RenderFields, BasePlat, Shadow) = func_platrot :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was used in Half-Life for brushes that could rotate while moving up and down at the same time, so use func_tracktrain instead."
[
	spawnflags(Flags) =
	[
		1: "[1] Toggle" : 1
		64: "[64] X Axis" : 0
		128: "[128] Y Axis" : 0
	]
	noise1(sound) : "Movement Sound" : : "The sound to play when the brush moves."
	noise2(sound) : "Stop Sound" : : "The sound to play when the brush stops moving."
	speed(integer) : "Speed of Rotation" : 50 : "Speed at which the brush rotates, in degrees per second."
	height(integer) : "Travel Altitude" : 0 : "The vertical distance from the starting position that this platform moves. If negative, the platform will lower."
	rotation(integer) : "Spin amount" : 0 : "The amount this platform should rotate as it moves, in degrees."
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
]

@SolidClass base(BaseTrain) = func_tanktrain :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity is buggy and doesn't do what it's supposed to do. You should really use func_tracktrain instead."
[
	health(integer) : "Health" : 100

	// Outputs
	output OnDeath(void) : "Fired when the tank is killed."
]

@SolidClass base(Trackchange) = func_trackchange :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was used in Half-Life for platforms that carry a func_tracktrain to another track." +
    "You should use another func_tracktrain instead."
[
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
]

@SolidClass base(Trackchange) = func_trackautochange :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was used in Half-Life for platforms that carry a func_tracktrain to another track." +
    "You should use another func_tracktrain instead."
[
	input Trigger(void) : "Trigger the track change."
]

@SolidClass base(Targetname, RenderFields, Global, Shadow) = func_wall :
	"OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was basically Half-Life's version of func_brush. Use func_brush instead."
[
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
]

@SolidClass base(func_wall) = func_wall_toggle :
	"OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity was basically Half-Life's version of func_brush. Use func_brush instead."
[
	spawnflags(flags) =
	[
		1 : "[1] Starts Invisible" : 0
	]

	// Inputs
	input  Toggle(void) : "Toggle the brush on/off. When off, the brush will be non-solid and invisible."
]

@PointClass base(Targetname) iconsprite("editor/game_gib_manager") = game_gib_manager :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity is a pointlessly excessive optimization technique." +
    "It limits how many gibs there can be on the map." +
    "Gibs almost always clean themselves up after a certain amount of time."
[
	maxpieces(integer)	: "Max Gib Count" : -1 : "Sets the max number of gib that can be spawned at a time. (-1=no limit)"
	maxpiecesdx8(integer)	: "Max Gib Count On DX8" : -1 : "Sets the max number of gib that can be spawned at a time under DX8. (-1=use Max Gib Count setting)"
	allownewgibs(choices)	: "Allow New Gibs To Spawn" : 0 : "If true, when the max gib count is reached, oldest gibs are removed as new gibs spawn. If false, new gibs will not be spawned once the gib limit is reached." =
	[
		0 : "No"
		1 : "Yes"
	]

	input SetMaxPieces(integer)	: "Set the max gib count."
	input SetMaxPiecesDX8(integer)	: "Set the max gib count under DX8."
]

@PointClass halfgridsnap base(ForceController) studioprop("models/editor/cone_helper_gray.mdl") = phys_torque :
	"Spins an object. phys_motor and phys_thruster give the same function with more options."
[
	// Angular acceleration (units are degress/s^2)
	force(string) : "Angular Acceleration" : "0"
	axis(vecline) : "Rotation Axis" : ""
]

//-------------------------------------------------------------------------
//
// Info Entities
//
//-------------------------------------------------------------------------

@PointClass base(Targetname, Parentname, Angles, PlayerClass) studio("models/editor/playerstart.mdl") = info_teleport_destination :
	"OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity used to be needed for trigger_teleport's destination. Use info_target."
[
]

@PointClass base(Targetname,Parentname) iconsprite("editor/info_target_instructor_hint") = info_target_instructor_hint :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "This entity can be replaced with an info_target that always transmits to clients." +
    "A generic target that gets replicated to the client for hud hint targeting"
[

]

//-------------------------------------------------------------------------
//
// View
//
//-------------------------------------------------------------------------

@PointClass base(BaseDriveableVehicle) studioprop() = vehicle_viewcontroller :
    "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps." +
    "It's an entity used to control the player's view while giving them realistic motion." +
    "Use prop_vehicle_choreo_generic instead; it has more features." +
	"Vehicle hack to control player view"
[
	input ForcePlayerIn(string) : "Force the player into the vehicle. The animation to use can be specified in the parameter. Without a parameter, the player just teleports."
	input ForcePlayerOut(void) : "Force the player out of the vehicle."
]
